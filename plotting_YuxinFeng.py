import pandas as pdimport matplotlib.pyplot as plt## air pollution plotting## city : austin## category : no2# import all the date needed for ploting austin air pollution (no2)austin_2020_no2 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/no2/austin_2020_no2.csv')austin_2019_no2 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/no2/austin_2019_no2.csv')austin_2018_no2 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/no2/austin_2018_no2.csv')austin_2020_no2_unselected = austin_2020_no2.loc[:, ['Date', 'Daily Max 1-hour NO2 Concentration','Site ID']]austin_2020_no2_unselected = austin_2020_no2_unselected[austin_2020_no2_unselected['Site ID'] == 484531068] austin_2019_no2_unselected = austin_2019_no2.loc[:, ['Date', 'Daily Max 1-hour NO2 Concentration','Site ID']]austin_2019_no2_unselected = austin_2019_no2_unselected[austin_2019_no2_unselected['Site ID'] == 484531068] austin_2018_no2_unselected = austin_2018_no2.loc[:, ['Date', 'Daily Max 1-hour NO2 Concentration','Site ID']]austin_2018_no2_unselected = austin_2018_no2_unselected[austin_2018_no2_unselected['Site ID'] == 484531068] austin_2020_no2_date = austin_2020_no2_unselected['Date'].values.tolist()austin_2020_no2_concentration = austin_2020_no2_unselected['Daily Max 1-hour NO2 Concentration'].values.tolist()austin_2019_no2_date = austin_2019_no2_unselected['Date'].values.tolist()austin_2019_no2_concentration = austin_2019_no2_unselected['Daily Max 1-hour NO2 Concentration'].values.tolist()austin_2018_no2_date = austin_2018_no2_unselected['Date'].values.tolist()austin_2018_no2_concentration = austin_2018_no2_unselected['Daily Max 1-hour NO2 Concentration'].values.tolist()austin_no2_plot = plt.figure()ax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')plt.subplot(3, 1, 1)plt.plot(austin_2018_no2_date, austin_2018_no2_concentration, c = '#B0C4DE')plt.xticks(())plt.title('2018')plt.subplot(3, 1, 2)plt.plot(austin_2019_no2_date, austin_2019_no2_concentration, c = '#6495ED')plt.xticks(())plt.title('2019')plt.subplot(3, 1, 3)plt.plot(austin_2020_no2_date, austin_2020_no2_concentration)plt.xticks(())plt.title('2020')plt.suptitle('2018-2020 Austin Air Pollutuon - NO2 \n x axis - Date \n y axis - Daily Max 1-hour NO2 Concentration',              fontsize='large')austin_no2_plot.tight_layout()plt.show()## air pollution plotting## city : austin## catagory : pm10# import all the date needed for ploting austin air pollution (pm10)austin_2020_pm10 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/pm10/austin_2020_pm10.csv')austin_2019_pm10 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/pm10/austin_2019_pm10.csv')austin_2018_pm10 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/pm10/austin_2018_pm10.csv')austin_2020_pm10_unselected = austin_2020_pm10.loc[:, ['Date', 'Daily Mean PM10 Concentration','Site ID']]austin_2020_pm10_unselected = austin_2020_pm10_unselected[austin_2020_pm10_unselected['Site ID'] == 484530021] austin_2019_pm10_unselected = austin_2019_pm10.loc[:, ['Date', 'Daily Mean PM10 Concentration','Site ID']]austin_2019_pm10_unselected = austin_2019_pm10_unselected[austin_2019_pm10_unselected['Site ID'] == 484530021] austin_2018_pm10_unselected = austin_2018_pm10.loc[:, ['Date', 'Daily Mean PM10 Concentration','Site ID']]austin_2018_pm10_unselected = austin_2018_pm10_unselected[austin_2018_pm10_unselected['Site ID'] == 484530021] austin_2020_pm10_date = austin_2020_pm10_unselected['Date'].values.tolist()austin_2020_pm10_concentration = austin_2020_pm10_unselected['Daily Mean PM10 Concentration'].values.tolist()austin_2019_pm10_date = austin_2019_pm10_unselected['Date'].values.tolist()austin_2019_pm10_concentration = austin_2019_pm10_unselected['Daily Mean PM10 Concentration'].values.tolist()austin_2018_pm10_date = austin_2018_pm10_unselected['Date'].values.tolist()austin_2018_pm10_concentration = austin_2018_pm10_unselected['Daily Mean PM10 Concentration'].values.tolist()austin_pm10_plot = plt.figure()ax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')plt.subplot(3, 1, 1)plt.plot(austin_2018_pm10_date, austin_2018_pm10_concentration, c = '#B0C4DE')plt.ylim((0, 100))plt.xticks(())plt.title('2018')plt.subplot(3, 1, 2)plt.plot(austin_2019_pm10_date, austin_2019_pm10_concentration, c = '#6495ED')plt.ylim((0, 100))plt.xticks(())plt.title('2019')plt.subplot(3, 1, 3)plt.plot(austin_2020_pm10_date, austin_2020_pm10_concentration)plt.ylim((0, 100))plt.xticks(())plt.title('2020')plt.suptitle('2018-2020 Austin Air Pollutuon - PM10 \n x axis - Date \n y axis - Daily Mean PM10 Concentration',              fontsize='large')austin_pm10_plot.tight_layout()plt.show()## air pollution plotting## city : austin## catagory : pm25# import all the date needed for ploting austin air pollution (pm10)austin_2020_pm25 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/pm25/austin_2020_pm25.csv')austin_2019_pm25 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/pm25/austin_2019_pm25.csv')austin_2018_pm25 = pd.read_csv('/Users/yf/python-mid-data-demo/air_pollution/austin/pm25/austin_2018_pm25.csv')austin_2020_pm25_unselected = austin_2020_pm25.loc[:, ['Date', 'Daily Mean PM2.5 Concentration','Site ID']]austin_2020_pm25_unselected = austin_2020_pm25_unselected[austin_2020_pm25_unselected['Site ID'] == 484531068] austin_2019_pm25_unselected = austin_2019_pm25.loc[:, ['Date', 'Daily Mean PM2.5 Concentration','Site ID']]austin_2019_pm25_unselected = austin_2019_pm25_unselected[austin_2019_pm25_unselected['Site ID'] == 484531068] austin_2018_pm25_unselected = austin_2018_pm25.loc[:, ['Date', 'Daily Mean PM2.5 Concentration','Site ID']]austin_2018_pm25_unselected = austin_2018_pm25_unselected[austin_2018_pm25_unselected['Site ID'] == 484531068] austin_2020_pm25_date = austin_2020_pm25_unselected['Date'].values.tolist()austin_2020_pm25_concentration = austin_2020_pm25_unselected['Daily Mean PM2.5 Concentration'].values.tolist()austin_2019_pm25_date = austin_2019_pm25_unselected['Date'].values.tolist()austin_2019_pm25_concentration = austin_2019_pm25_unselected['Daily Mean PM2.5 Concentration'].values.tolist()austin_2018_pm25_date = austin_2018_pm25_unselected['Date'].values.tolist()austin_2018_pm25_concentration = austin_2018_pm25_unselected['Daily Mean PM2.5 Concentration'].values.tolist()austin_pm25_plot = plt.figure()ax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')plt.subplot(3, 1, 1)plt.plot(austin_2018_pm25_date, austin_2018_pm25_concentration, c = '#B0C4DE')plt.ylim((0, 50))plt.xticks(())plt.title('2018')plt.subplot(3, 1, 2)plt.plot(austin_2019_pm25_date, austin_2019_pm25_concentration, c = '#6495ED')plt.ylim((0, 50))plt.xticks(())plt.title('2019')plt.subplot(3, 1, 3)plt.plot(austin_2020_pm25_date, austin_2020_pm25_concentration)plt.ylim((0, 50))plt.xticks(())plt.title('2020')plt.suptitle('2018-2020 Austin Air Pollutuon - PM25 \n x axis - Date \n y axis - Daily Mean PM2.5 Concentration',              fontsize='large')austin_pm25_plot.tight_layout()plt.show()## weather plotting## city : austin## category : temperatureaustin_weather_total = pd.read_csv('/Users/yf/python-mid-data-demo/weather/austin/2010_2020_austin.csv')austin_weather_2020 = austin_weather_total.loc[3652:4017, ['DATE', 'TAVG','TMAX','TMIN']]austin_weather_2019 = austin_weather_total.loc[3287:3651, ['DATE', 'TAVG','TMAX','TMIN']]austin_weather_2018 = austin_weather_total.loc[2922:3286, ['DATE', 'TAVG','TMAX','TMIN']]austin_weather_2020_date = austin_weather_2020['DATE'].values.tolist()austin_weather_2019_date = austin_weather_2019['DATE'].values.tolist()austin_weather_2018_date = austin_weather_2018['DATE'].values.tolist()austin_weather_2020_TAVG = austin_weather_2020['TAVG'].values.tolist()austin_weather_2019_TAVG = austin_weather_2019['TAVG'].values.tolist()austin_weather_2018_TAVG = austin_weather_2018['TAVG'].values.tolist()austin_weather_2020_TMAX = austin_weather_2020['TMAX'].values.tolist()austin_weather_2019_TMAX = austin_weather_2019['TMAX'].values.tolist()austin_weather_2018_TMAX = austin_weather_2018['TMAX'].values.tolist()austin_weather_2020_TMIN = austin_weather_2020['TMIN'].values.tolist()austin_weather_2019_TMIN = austin_weather_2019['TMIN'].values.tolist()austin_weather_2018_TMIN = austin_weather_2018['TMIN'].values.tolist()# 2020 austin weatheraustin_weather_2020_plot = plt.figure()ax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')plt.plot(austin_weather_2020_date, austin_weather_2020_TAVG, c = '#20B2AA', label = 'AVG Temp')plt.plot(austin_weather_2020_date, austin_weather_2020_TMAX, c = '#BC8F8F', lw = 0.3, label = 'MAX Temp')plt.plot(austin_weather_2020_date, austin_weather_2020_TMIN, c = '#696969', lw = 0.3, label = 'MIN Temp')plt.legend(loc = 'lower center')plt.xticks(())plt.xlabel('Date (from Jan to Dec)')plt.ylabel('Temperature ℉')plt.title('2020 Austin Weather', fontsize='large', fontweight='bold')austin_weather_2020_plot.tight_layout()plt.show()# 2019 austin weatheraustin_weather_2019_plot = plt.figure()ax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')plt.plot(austin_weather_2019_date, austin_weather_2019_TAVG, c = '#20B2AA', label = 'AVG Temp')plt.plot(austin_weather_2019_date, austin_weather_2019_TMAX, c = '#BC8F8F', lw = 0.3, label = 'MAX Temp')plt.plot(austin_weather_2019_date, austin_weather_2019_TMIN, c = '#696969', lw = 0.3, label = 'MIN Temp')plt.legend(loc = 'lower center')plt.xticks(())plt.xlabel('Date (from Jan to Dec)')plt.ylabel('Temperature ℉')plt.title('2019 Austin Weather', fontsize='large', fontweight='bold')austin_weather_2019_plot.tight_layout()plt.show()# 2018 austin weatheraustin_weather_2018_plot = plt.figure()ax = plt.gca()ax.spines['right'].set_color('none')ax.spines['top'].set_color('none')plt.plot(austin_weather_2018_date, austin_weather_2018_TAVG, c = '#20B2AA', label = 'AVG Temp')plt.plot(austin_weather_2018_date, austin_weather_2018_TMAX, c = '#BC8F8F', lw = 0.3, label = 'MAX Temp')plt.plot(austin_weather_2018_date, austin_weather_2018_TMIN, c = '#696969', lw = 0.3, label = 'MIN Temp')plt.legend(loc = 'lower center')plt.xticks(())plt.xlabel('Date (from Jan to Dec)')plt.ylabel('Temperature ℉')plt.title('2018 Austin Weather', fontsize='large', fontweight='bold')austin_weather_2019_plot.tight_layout()plt.show()